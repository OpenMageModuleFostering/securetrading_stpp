<?php

$translations = array(
	'The action instance was null.' => '',
	'The result object is null.' => '',
	'%s has been called with the request method "%s".' => '',
	'The notificationreference was not posted to the notification.' => '',
	'The notificationreference was not a string.' => '',
	'The notification with notificationereference "%s" has already been processed.' => '',
	'The requesttypedescription has not been posted to the notification.' => '',
	'The notification hash is enabled but the \'responsesitesecurity\' field was not posted to the notification script.' => '',
	'The posted responsesitesecurity field was not a string.' => '',
	'The notification hashes did not match: %s !== %s.' => '',
	'An unhandled responsetype has been provided: "%s".' => '',
	'The redirect has been run for request method \'%s\'.' => '',
	'The responsesitesecurity was not sent to the redirect.' => '',
	'The responsesitesecurity sent to the redirect was not a string.' => '',
	'The redirect hashes did not match: %s and %s.' => '',
	'No payment types are available for selection.' => '',
	'Card Type' => '',
	'This is the bank that issued you with your credit/debit card.  The issuer logo/details are shown on your card.' => '',
	'Card Number' => '',
	'This is the long 15 or 16 digit number on the front of your card.' => '',
	'Start Date' => '',
	'The month and year that your card was issued.  This can be found on the front of your card.' => '',
	'Start Month' => '',
	'The month that your card was issued.  This can be found on the front of your card.' => '',
	'Start Year' => '',
	'The year that your card was issued.  This can be found on the front of your card.' => '',
	'Expiry Date' => '',
	'The month and year that your card expires.  This can be found on the front of your card.' => '',
	'Expiry Month' => '',
	'The month that your card expires.  This can be found on the front of your card.' => '',
	'Expiry Year' => '',
	'The year that your card expires.  This can be found on the front of your card.' => '',
	'Security Code' => '',
	'This can be found on the back of your card.  It is a 3 or 4 digit number.' => '',
	'Issue Number' => '',
	'If present, this will be on the front of your card.  Not all credit/debit cards have an issue number.' => '',
	'Pay with a new card.' => '',
	'Select this option to enter new credit/debit card details.' => '',
	'Pay with a saved card.' => '',
	'Select this option to choose from one of your saved credit/debit cards.' => '',
	'Do not save my card details.' => '',
	'Select this option to not save your card details with us.  By selecting this option you will not be able to take advantage of our easier and faster checkout process when placing future orders.' => '',
	'Save my card details securely.' => '',
	'Select this option to securely save your card details with us.  This allows you to make future purchases quickly and easily.' => '',
	'Site Reference' => '',
	'You must obtain a site reference from SecureTrading before you can use this module.  This module can accept either a test site reference or a live site reference.' => '',
	'Enable Authorize Only' => '',
	'Enabling authorize only payments will set the settlestatus of the order to 2.  This means the payment will be suspended in the SecureTrading system and will not be captured by your aquiring bank.' => '',
	'Settle Due Date' => '',
	'The settle due date is the day that funds held against your customers\' account will be aquired.' => '',
	'Settle Status' => '',
	'This is the settle status that will be applied to this transaction.  This should normally be set to 0.' => '',
	'Use Site Security' => '',
	'Site security should always be enabled on a live site.  It allows payments to be taken to the Payment Pages safely.  It should only be disabled for testing purposes when using a test site reference.  The site security must be configured correctly both here and on your SecureTrading account.' => '',
	'Site Security Password' => '',
	'This is the password that will be used as part of the site security configuration.  It must match the password configured on your SecureTrading account.' => '',
	'Site Security Algorithm' => '',
	'This is the hash algorithm that will be used as part of the site security configuration.  It must match the algorithm configured on your SecureTrading account.' => '',
	'Use Notification Hash' => '',
	'The notification hash should always be enabled on a live site.  It allows notifications to be sent from SecureTrading to your store securely.  It should only be disabled for testing purposes when using a test site reference.  The notification hash must be configured correctly both here and on your SecureTrading account in MyST.' => '',
	'Notification Hash Password' => '',
	'This is the password that will be used as part of the notification hash configuration.  It must match the password configured on your SecureTrading account in MyST.' => '',
	'Notification Hash Algorithm' => '',
	'This is the hash algorithm that will be used as part of the notification hash configuration.  It must match the algorithm configured on your SecureTrading account in MyST.' => '',
	'Parent CSS' => '',
	'The parent CSS file allows you to make the Payment Pages look the same as your own website by overriding the main CSS stylesheet loaded on the SecureTrading Payment Pages.  Upload this stylesheet to the MyST File Manager and then enter the filename of the file you uploaded to the File Manager here, without the file path or the extension.' => '',
	'Child CSS' => '',
	'The child CSS file allows you to alter the appearance of certain parts of the Payment Pages by extending the main CSS stylesheet loaded on the SecureTrading Payment Pages (CSS Inheritance).  This is useful when you wish to make minor changes to the default look of the Payment Pages.  Upload this stylesheet to the MyST File Manager and then enter the filename of the file you uploaded to the File Manager here, without the file path or the extension.' => '',
	'Parent JS' => '',
	'The parent JS file, if provided, replaces the JavaScript file that is loaded when the Payment Pages are viewed by your customers.  You should provide this file when you wish to drastically alter the front-end validation and user-experience provided by the default SecureTrading javascript file.  Upload this file to the MyST File Manager and then enter the filename of the file you uploaded to the File Manager here, without the file path or the extension.' => '',
	'Child JS' => '',
	'The child JS file is loaded after the default Payment Pages Javascript file has been loaded.  You can use a child JS file to make small alterations to the default Payment Pages behaviour.  Upload this file to the MyST File Manager and then enter the filename of the file you uploaded to the File Manager here, without the file path or the extension.' => '',
	'Use Iframe' => '',
	'Enabling this option will make the Payment Pages load in an HTML iframe element.  Using an iframe in combination with parent/child CSS allows you to make it appear as if the Payment Pages are part of your own website.' => '',
	'Use API with Payment Pages' => '',
	'Enabling this option will allow your shopping cart to interact with the SecureTrading API using ST API or our WebServices.  This allows you to perform TRANSACTIONUPDATE and REFUND requests from the shopping cart without using MyST.' => '',
	'Connection' => '',
	'This lets you choose which connection method to use when connecting to the SecureTrading API.' => '',
	'Use 3D Secure' => '',
	'Enabling 3D Secure will reduce the possibility of fraudulent transactions being processed on your store and can shift the liability of chargebacks from you (the merchant) to your aquiring bank .  3D Secure must be enabled on your SecureTrading account before you can use this feature.' => '',
	'Use Risk Decision' => '',
	'Enabling Risk Decision requests will reduce the possibility of fraudulent transactions by comparing a customer transaction against a fraud-check database and suspending suspicious transactions. Risk Decision requests must be enabled on your SecureTrading account before you can use this feature.' => '',
	'Use Card Store' => '',
	'Using Card Store will allow your customers to store their debit/credit card information for easy repeat purchasing.  Card information is stored on the SecureTrading servers, not on your own website (a maskedpan and transactionreference only are stored on your site).  Card Store requests must be enabled on your SecureTrading account before you can use this feature.' => '',
	'Use Risk Decision After Auth' => '',
	'The usual scenario is that a Risk Decision request is sent before an Auth request.  This allows the Auth to be suspended (settlestatus 2) if the Risk Decision reports that the transaction may be fraudulent.  Running a Risk Decision after an Auth (as opposed to before an Auth) provides the risk decision with more information (CC details) to use when determining when a transaction may be fraudulent, but this stops the auth from automatically being suspended if the transaction may be fraudulent.' => '',
	'Use Auto Card Store' => '',
	'Enabling this will make your store automatically process Card Store requests when taking payment: users will not be given the choice to store their card details or not.  Card Store requests must be enabled on your SecureTrading account before you use this feature.  You must also have selected "Enable Card Store".' => '',
	'Accepted Cards' => '',
	'These are the payment types that you wish to show when a user makes payment with SecureTrading.' => '',
	'Enabling this option will make the 3D Secure ACS URL load in an HTML iframe element (if 3D Secure is enabled).  Using an iframe allows you to make it appear as if the ACS URL is part of your own website.' => '',
	'ST API Alias' => '',
	'This is the alias to use when connecting to SecureTrading through ST API.  Usually this is the same as your site reference.' => '',
	'ST API Host' => '',
	'This is the host on which the ST API client is running.  This should usually be set to "localhost".' => '',
	'ST API Port' => '',
	'This is the port on which the ST API client is listening.  The default port for ST API is 5000.' => '',
	'Web Services Alias' => '',
	'This is the alias to use when connecting to SecureTrading through our WebServices.  Usually this is the same as your site reference.' => '',
	'Web Services Username' => '',
	'This is the username used for server authentication when connecting to the SecureTrading API using our Web Services.' => '',
	'Web Services Password' => '',
	'This is the password used for server authentication when connecting to the SecureTrading API using our Web Services' => '',
	'Verify SSL CA (Web Services)' => '',
	'Enable this option to verify that the CA signing the SecureTrading Web Services SSL certificate is one you trust.  This should always be used in a production environment and should only be disabled for testing purposes when using a test site reference.' => '',
	'SSL CA FILE (Web Services)' => '',
	'The full filepath containing trusted CAs.  The file should be in .PEM/.CRT format.  This is required when verifying SSL CAs with our Web Services connection method.' => '',
	'The request is null.' => '',
	'Removed.' => '',
	'Invalid accounttypedescription: \'%s\'.' => '',
	'Invalid request type description: \'%s\'.' => '',
	'Invalid paymenttype: \'%s\'.' => '',
	'An invalid settleduedate ("%s") has been provided.' => '',
	'An invalid settle status ("%s") has been provided.' => '',
	'Invalid shipping method provided; "%s".' => '',
	'Invalid telephone type provided: "%s".' => '',
	'The filter has not been set correctly.' => '',
	'The updates have not been set correctly.' => '',
	'No response element in response XML.' => '',
	'Unsupported response type "%s" returned.' => '',
	'Response type "%s" unhandled.' => '',
	'The sender has not been set.' => '',
	'The processor has not been set.' => '',
	'The active connection has not been set.' => '',
	'The XmlWriter has not been set.' => '',
	'The XmlReader has not been set.' => '',
	'The context object is null.' => '',
	'Invalid request type: "%s".' => '',
	'The action instance has not been set.' => '',
	'The api log has not been set.' => '',
	'Unsupported response: "%s".' => '',
	'Transaction successful.' => '',
	'credit/debit card number' => '',
	'The %s was not provided or was incorrect.' => '',
	'Your credit/debit card was declined.  Please try again using a different card.' => '',
	'The customer\'s credit/debit card was declined.' => '',
	'An unexpected error occurred.  Please try again.' => '',
	'The MD has not been set.' => '',
	'The PaRes has not been set.' => '',
	'Not all parameters were passed to the refund function.' => '',
	'The filters do not exist.' => '',
	'The updates do not exist.' => '',
	'Unhandled request type "%s" provided.' => '',
	'No requests have been set.' => '',
	'The array index does not exist.' => '',
	'The responses must be an array.' => '',
	'No responses have been set.' => '',
	'Could not open socket to "%s".' => '',
	'The write operation failed.' => '',
	'An HTTP response code could not be found.' => '',
	'Unexpected HTTP response code %s returned.' => '',
	'An object with the key "%s" already exists.' => '',
	'Invalid key specified: "%s".' => '',
	'The object with key "%s" does not exist.' => '',
	'The connection store must be an array.' => '',
	'The connection store is empty.' => '',
	'The host parameter must be a string.' => '',
	'The port parameter must be a string or an integer.' => '',
	'Unable to create socket.  Reason: "%s".' => '',
	'Socket unable to connect to %s:%s.  Reason: "%s".' => '',
	'Unable to write to socket.  Reason: "%s".' => '',
	'Unable to read from socket.  Reason: "%s".' => '',
);